name: Build and Release Docker Image

on:
  push:
    tags:
      - 'v*'  # 匹配类似 v1.0.0 的标签

env:
  # 变量
  DOCKER_IMAGE_NAME: "ros2-humble-turtlebot3-sim"  # 镜像名称变量

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Extract tag metadata
      id: get_tag
      run: |
        TAG_NAME="${GITHUB_REF#refs/tags/}"
        echo "tag_name=$TAG_NAME" >> $GITHUB_OUTPUT
        echo "TAG_NAME=$TAG_NAME" >> $GITHUB_ENV
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./src
        file: ./Dockerfile
        tags: |
          ${{ env.DOCKER_IMAGE_NAME }}:${{ env.TAG_NAME }}
          ${{ env.DOCKER_IMAGE_NAME }}:latest
        outputs: type=docker,dest=/tmp/${{ env.DOCKER_IMAGE_NAME }}-${{ env.TAG_NAME }}.tar
    
    - name: Compress Docker image
      run: |
        gzip -c /tmp/${{ env.DOCKER_IMAGE_NAME }}-${{ env.TAG_NAME }}.tar > /tmp/${{ env.DOCKER_IMAGE_NAME }}-${{ env.TAG_NAME }}.tar.gz
        echo "IMAGE_NAME=${{ env.DOCKER_IMAGE_NAME }}-${{ env.TAG_NAME }}.tar.gz" >> $GITHUB_ENV
    
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TAG_NAME }}
        release_name: Release ${{ env.TAG_NAME }}
        draft: false
        prerelease: false
    
    - name: Upload Docker image to Release
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: /tmp/${{ env.IMAGE_NAME }}
        asset_name: ${{ env.IMAGE_NAME }}
        asset_content_type: application/gzip
    
    - name: Generate checksum
      run: |
        cd /tmp
        sha256sum ${{ env.IMAGE_NAME }} > ${{ env.IMAGE_NAME }}.sha256
    
    - name: Upload checksum
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: /tmp/${{ env.IMAGE_NAME }}.sha256
        asset_name: ${{ env.IMAGE_NAME }}.sha256
        asset_content_type: text/plain
